<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:converters ="clr-namespace:EdgeDetectionApp.Converters"
                    xmlns:vm ="clr-namespace:EdgeDetectionApp.ViewModel">

    <vm:ViewModelLocator x:Key="ViewModelLocator" />
    
    <!--Converters-->
    <converters:BitmapToBitmapImageConverter x:Key="bitmapToBitmapImageConverter"/>
    <converters:BoolToVisibilityConverter x:Key="boolToVisibilityConverter"/>
    
    <!--Brushes-->
    <SolidColorBrush x:Key="textColor" Color="#A9A9A9" />
    <SolidColorBrush x:Key="mainColor" Color="#222E31" />
    <SolidColorBrush x:Key="blackColor" Color="#181818" />
    <SolidColorBrush x:Key="greenColor" Color="#00b300" />
    <SolidColorBrush x:Key="titleBarButtonColor" Color="#212121" />
    <SolidColorBrush x:Key="titleBarMouseOverCloseButtonColor" Color="#ff0000" />
    <SolidColorBrush x:Key="titleBarMouseOverButtonColor" Color="#424242" />
    <SolidColorBrush x:Key="borderColor" Color="#cccdcd" />

    <!--Images-->
    <ImageSource x:Key="appIcon">Icons/edge.png</ImageSource>
    <ImageSource x:Key="cancelImage">Icons/cancel.png</ImageSource>
    <ImageSource x:Key="minimizeImage">Icons/minimize.png</ImageSource>
    <ImageSource x:Key="restoreDownImage">Icons/restore-down.png</ImageSource>
    <ImageSource x:Key="newImage">Icons/new.png</ImageSource>
    <ImageSource x:Key="openFileImage">Icons/open-file.png</ImageSource>
    <ImageSource x:Key="saveAsImage">Icons/save-as.png</ImageSource>
    <ImageSource x:Key="settingsImage">Icons/settings.png</ImageSource>
    <ImageSource x:Key="imageImage">Icons/image.png</ImageSource>
    <ImageSource x:Key="webcamImage">Icons/webcam.png</ImageSource>
    <ImageSource x:Key="snapshotImage">Icons/snapshot.png</ImageSource>

    <!--Styles-->
    <Style TargetType="{x:Type Button}" x:Key="closeButtonStyle">
        <Setter Property="Background" Value="{StaticResource titleBarButtonColor}"/>
        <Setter Property="Width" Value="30"/>
        <Setter Property="HorizontalAlignment" Value="Right"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border Background="{TemplateBinding Background}" BorderBrush="{StaticResource borderColor}" BorderThickness="0.2">
                        <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Button.Background" Value="{StaticResource titleBarMouseOverCloseButtonColor}"/>
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style TargetType="{x:Type Button}" x:Key="topBarButtonStyle">
        <Setter Property="Background" Value="{StaticResource titleBarButtonColor}"/>
        <Setter Property="Width" Value="30"/>
        <Setter Property="HorizontalAlignment" Value="Right"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border Background="{TemplateBinding Background}" BorderBrush="{StaticResource borderColor}" BorderThickness="0.2">
                        <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Button.Background" Value="{StaticResource titleBarMouseOverButtonColor}"/>
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="RadioButtonList" TargetType="{x:Type ListBox}">
        <Setter Property="SnapsToDevicePixels" Value="true"/>
        <Setter Property="OverridesDefaultStyle" Value="true"/>
        <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Auto"/>
        <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto"/>
        <Setter Property="ScrollViewer.CanContentScroll" Value="true"/>
        <Setter Property="MinWidth" Value="120"/>
        <Setter Property="MinHeight" Value="95"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ListBox">
                    <Border Name="Border" Background="Transparent"
                        BorderBrush="Transparent"
                        BorderThickness="0"
                        CornerRadius="2">
                        <ScrollViewer Margin="0" Focusable="false">
                            <StackPanel Margin="2" IsItemsHost="True" />
                        </ScrollViewer>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter TargetName="Border" Property="Background"
                                Value="Transparent" />
                            <Setter TargetName="Border" Property="BorderBrush"
                                Value="Transparent" />
                        </Trigger>
                        <Trigger Property="IsGrouping" Value="true">
                            <Setter Property="ScrollViewer.CanContentScroll" Value="false"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="ItemContainerStyle">
            <Setter.Value>
                <Style TargetType="{x:Type ListBoxItem}" >
                    <Setter Property="Margin" Value="7,4,7,4" />
                    <Setter Property="Template">
                        <Setter.Value>
                            <ControlTemplate TargetType="{x:Type ListBoxItem}">
                                <Border Name="theBorder" Background="Transparent" >
                                    <RadioButton Focusable="False" IsHitTestVisible="False" Foreground="{StaticResource textColor}"
                                             IsChecked="{TemplateBinding IsSelected}">
                                        <ContentPresenter />
                                    </RadioButton>
                                </Border>
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>
                </Style>
            </Setter.Value>
        </Setter>
    </Style>

</ResourceDictionary>